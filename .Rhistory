new_case_pred = predict(modelNewcase1,test_data)
sum((new_case_pred - test_data$all_new_case)^2)
modelNewcase2 <- lm(formula = all_new_case ~ NumDays + new_tests + new_vaccinations + people_fully_vaccinated + total_boosters, data = train_data)
summary(modelNewcase2)
new_case_pred2 = predict(modelNewcase2,test_data)
MAE(new_case_pred2,test_data$all_new_case
modelNewcase3 <- lm(formula = all_new_case ~ NumDays * new_tests * new_vaccinations * people_fully_vaccinated * total_boosters, data = train_data)
summary(modelNewcase3)
new_case_pred3 = predict(modelNewcase3,test_data)
sum((new_case_pred3 - test_data$all_new_case)^2)
mean(modelNewcase3$residuals^2)
modelNewcase3 <- lm(formula = all_new_case ~ NumDays * new_tests * new_vaccinations * people_fully_vaccinated * total_boosters, data = train_data)
summary(modelNewcase3)
new_case_pred3 = predict(modelNewcase3,test_data)
sum((new_case_pred3 - test_data$all_new_case)^2)
mean(modelNewcase3$residuals^2)
modelNewdeath1 <- lm(formula = new_death ~ NumDays + new_recovered * stringency_index * reproduction_rate, data = train_data)
summary(modelNewdeath1)
new_death_pred = predict(modelNewdeath1,test_data)
sum((new_death_pred - test_data$new_death)^2)
mean(modelNewdeath1$residuals^2)
modelNewdeath2 <- lm(formula = new_death ~ ., data = train_data)
summary(modelNewdeath2)
new_death_pred2 = predict(modelNewdeath2,test_data)
sum((new_death_pred2 - test_data$new_death)^2)
mean(modelNewdeath2$residuals^2)
modelNewdeath3 <- lm(formula = new_death ~ NumDays + new_recovered * stringency_index, data = train_data)
summary(modelNewdeath3)
new_death_pred3 = predict(modelNewdeath3,test_data)
sum((new_death_pred3 - test_data$new_death)^2)
mean(modelNewdeath3$residuals^2) # choose this for new death
RMSE(new_death_pred3, test_data$new_death)
modelNewcase1 <- lm(formula = all_new_case ~ ., data = train_data)
summary(modelNewcase1, na.rm=TRUE)
new_case_pred = predict(modelNewcase1,test_data)
sum((new_case_pred - test_data$all_new_case)^2)
modelNewcase1 <- lm(formula = all_new_case ~ ., data = train_data)
summary(modelNewcase1, na.rm=TRUE)
new_case_pred = predict(modelNewcase1,test_data)
sum((new_case_pred - test_data$all_new_case)^2)
MAE(new_case_pred,test_data$all_new_case)
modelNewcase2 <- lm(formula = all_new_case ~ NumDays + new_tests + new_vaccinations + people_fully_vaccinated + total_boosters, data = train_data)
summary(modelNewcase2)
new_case_pred2 = predict(modelNewcase2,test_data)
MAE(new_case_pred2,test_data$all_new_case)
modelNewcase2 <- lm(formula = all_new_case ~ NumDays + new_tests + new_vaccinations + people_fully_vaccinated + total_boosters, data = train_data)
summary(modelNewcase2)
new_case_pred2 = predict(modelNewcase2,test_data)
sum((new_case_pred2 - test_data$all_new_case)^2)
MAE(new_case_pred2,test_data$all_new_case)
modelNewcase3 <- lm(formula = all_new_case ~ NumDays * new_tests * new_vaccinations * people_fully_vaccinated * total_boosters, data = train_data)
summary(modelNewcase3)
new_case_pred3 = predict(modelNewcase3,test_data)
sum((new_case_pred3 - test_data$all_new_case)^2)
mean(modelNewcase3$residuals^2)
# Part2: Predict new death
modelNewdeath1 <- lm(formula = new_death ~ NumDays + new_recovered * stringency_index * reproduction_rate, data = train_data)
summary(modelNewdeath1)
new_death_pred = predict(modelNewdeath1,test_data)
sum((new_death_pred - test_data$new_death)^2)
mean(modelNewdeath1$residuals^2)
modelNewdeath2 <- lm(formula = new_death ~ ., data = train_data)
summary(modelNewdeath2)
new_death_pred2 = predict(modelNewdeath2,test_data)
sum((new_death_pred2 - test_data$new_death)^2)
mean(modelNewdeath2$residuals^2)
modelNewdeath3 <- lm(formula = new_death ~ NumDays + new_recovered * stringency_index, data = train_data)
summary(modelNewdeath3)
new_death_pred3 = predict(modelNewdeath3,test_data)
sum((new_death_pred3 - test_data$new_death)^2)
mean(modelNewdeath3$residuals^2) # choose this for new death
RMSE(new_death_pred3, test_data$new_death)
modelNewdeath3 <- lm(formula = new_death ~ NumDays * new_recovered * stringency_index, data = train_data)
summary(modelNewdeath3)
new_death_pred3 = predict(modelNewdeath3,test_data)
sum((new_death_pred3 - test_data$new_death)^2)
mean(modelNewdeath3$residuals^2) # choose this for new death
RMSE(new_death_pred3, test_data$new_death)
library(lattice)
cNewDeath <- test_data$new_death
cNewDeathPred <- new_death_pred3
std_t <- predict(md,student,type = "response")
md <- glm(new_death ~ NumDays + new_recovered + stringency_index = train_data, family= "binomial")
md <- glm(new_death ~ NumDays + new_recovered + stringency_index , data= train_data, family= "binomial")
nww <- factor(dfPredict$new_death)
md <- glm(new_death ~ NumDays + new_recovered + stringency_index , data= train_data, family= "binomial")
nww <- factor(dfPredict$new_death, dfPredict$NumDays)
library(tidyverse)
library(ggplot2)
library(corrplot)
library(dplyr)
library(lubridate)
library(forecast)
library(imputeTS)
library(reshape2)
library(rpart)
library(rpart.plot)
library(caret)
library(xts)
library(lattice)
# ------------------------------------------------------------------------------ #
df <- read.csv("dataset/dataCovidPredict.csv")
## Preporcessing data
# Check dataset type
str(df)
# Consider txn_date is type factor. We have to change it to date type.
df$txn_date <- as.Date(df$txn_date, format="%m/%d/%Y")
tail(df)
str(df)
# ------------------------------------------------------------------------------ #
# Check outlier
#Overall
overallBeforeNA <- ggplot(stack(df), aes(x = ind, y = values, color=ind)) +
geom_boxplot(outlier.color="black")
#1 txn_date: NO
ggplot(df, aes('',txn_date)) +
geom_boxplot()
#2 new_case: YES
ggplot(df, aes('',new_case)) +
geom_boxplot()
#3 total_case: YES
ggplot(df, aes('',total_case)) +
geom_boxplot()
#4 new_case_excludeabroad: YES
ggplot(df, aes('',new_case_excludeabroad)) +
geom_boxplot()
#5 total_case_excludeabroad: YES
ggplot(df, aes('',total_case_excludeabroad)) +
geom_boxplot()
#6 new_death: YES
ggplot(df, aes('',new_death)) +
geom_boxplot()
#7 total_death: NO
ggplot(df, aes('',total_death)) +
geom_boxplot()
#8 new_recovered: YES
ggplot(df, aes('',new_recovered)) +
geom_boxplot()
#9 total_recovered: YES
ggplot(df, aes('',total_recovered)) +
geom_boxplot()
#10 total_vaccinations: NO
ggplot(df, aes('',total_vaccinations)) +
geom_boxplot()
#11 people_vaccinated: NO
ggplot(df, aes('',people_vaccinated)) +
geom_boxplot()
#12 people_fully_vaccinated: NO
ggplot(df, aes('',people_fully_vaccinated)) +
geom_boxplot()
#13 total_boosters: YES
ggplot(df, aes('',total_boosters)) +
geom_boxplot()
#14 new_vaccinations: YES
ggplot(df, aes('',new_vaccinations)) +
geom_boxplot()
#15 stringency_index: YES
ggplot(df, aes('',stringency_index)) +
geom_boxplot()
#16 excess_mortality_cumulative_absolute: YES
ggplot(df, aes('',excess_mortality_cumulative_absolute)) +
geom_boxplot()
#17 excess_mortality_cumulative: YES
ggplot(df, aes('',excess_mortality_cumulative)) +
geom_boxplot()
#18 excess_mortality: YES
ggplot(df, aes('',excess_mortality)) +
geom_boxplot()
# ------------------------------------------------------------------------------ #
# Check NA and replacement
sum(is.na(df))
df %>% select(everything()) %>%
summarise_all(list(~sum(is.na(.))))
# Replace NA with 0
dfClean <- df %>% select(-total_tests,
-new_tests,
-reproduction_rate)
dfClean[is.na(dfClean)] <- 0
sum(is.na(dfClean))
dfTemp <- df %>% select(total_tests,
new_tests,
reproduction_rate)
dfTemp$total_tests[is.na(dfTemp$total_tests)] <- na.ma(dfTemp$total_tests, weighting = "linear", k=21)[834:854]
dfTemp$new_tests[is.na(dfTemp$new_tests)] <- round(na.ma(dfTemp$new_tests, weighting = "linear", k=21)[834:854],0)
dfTemp$reproduction_rate[is.na(dfTemp$reproduction_rate)] <- round(na.ma(dfTemp$reproduction_rate, weighting = "linear", k=64)[1:64],2)
overallAfterNA <- ggplot(stack(df), aes(x = ind, y = values, color=ind)) +
geom_boxplot(outlier.color="black")
dfClean$total_tests <- dfTemp$total_tests
dfClean$new_tests <- dfTemp$new_tests
dfClean$reproduction_rate <- dfTemp$reproduction_rate
overallAfterNA <- ggplot(stack(dfClean), aes(x = ind, y = values, color=ind)) +
geom_boxplot(outlier.color="black")
# ------------------------------------------------------------------------------ #
## Build model with Linear regression
# Convert Date to NumDays
startdate <- as.Date("01/11/2020","%m/%d/%Y")
dfClean$txn_dat2 <-  as.Date(dfClean$txn_date,"%m/%d/%Y")
dfClean$NumDays  <- difftime(dfClean$txn_dat2,startdate ,units="days")
dfClean$NumDays <- as.numeric(dfClean$NumDays)
# Remove txn_dat2 column
dfClean <- dfClean %>% select(-txn_dat2)
# Select column
dfClean$all_new_case <- dfClean$new_case + df$new_case_excludeabroad
dfCor <- as.data.frame(cor(dfClean %>% select(-txn_date)))
corrplot(cor(dfClean %>% select(-txn_date)))
# Plot line smooth regression
ggplot(dfClean, aes(txn_date, new_case),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="#228B22",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_case),options(scipen = 100, digits = 4)) + geom_line(colour ="#006400",size=2) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, new_case_excludeabroad),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="#32CD32",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_case_excludeabroad),options(scipen = 100, digits = 4)) + geom_line(colour ="#32CD32",size=2) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, new_death),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="red",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_death),options(scipen = 100, digits = 4)) + geom_line(colour ="red",size=2) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, new_recovered),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="#0096FF",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_recovered),options(scipen = 100, digits = 4)) + geom_line(colour ="#0096FF",size=2) + scale_x_date(date_labels = "%Y %b %d")
tempData <- dfClean %>% select(txn_date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
total_boosters,
new_vaccinations)
data_long <- melt(tempData, id = "txn_date")
ggplot(data_long,aes(x = txn_date, y = value, color = variable),options(scipen = 100, digits = 4)) +  geom_line(size=2)
tempData <- dfClean %>% select(txn_date,
total_case,
total_case_excludeabroad,
total_death,
total_recovered)
data_long <- melt(tempData, id = "txn_date")
ggplot(data_long,aes(x = txn_date, y = value, color = variable),options(scipen = 100, digits = 4)) +  geom_line(size=2)
ggplot(dfClean, aes(txn_date, stringency_index),options(scipen = 100, digits = 4)) + geom_line(colour ="purple",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, new_tests),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="#99a9ff",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_tests),options(scipen = 100, digits = 4)) + geom_line(colour ="#00ddde",size=2) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, reproduction_rate),options(scipen = 100, digits = 4)) + geom_line(colour ="orange",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, all_new_case),options(scipen = 100, digits = 4)) + geom_line(colour ="#006400",size=2) + scale_x_date(date_labels = "%Y %b %d")
# ------------------------------------------------------------------------------ #
# Build model with linear regression
# Part1: Predict new case
dfPredict <- dfClean %>% select(-txn_date)
cor_mat <- cor(dfPredict)
temp_df <- data.frame(cor_mat[2,])
colnames(temp_df) = c('all_new_case')
temp_df %>%
filter(all_new_case > abs(0.5))
cor_mat <- cor(dfPredict)
temp_df2 <- data.frame(cor_mat[5,])
colnames(temp_df2) = c('new_death')
temp_df2
# train/test
set.seed(42)
n <- nrow(dfPredict)
train_id <- sample(1:n, size = 0.8*n)
train_data <- dfPredict[train_id, ]
test_data <- dfPredict[-train_id, ]
modelNewcase1 <- lm(formula = all_new_case ~ ., data = train_data)
summary(modelNewcase1, na.rm=TRUE)
new_case_pred = predict(modelNewcase1,test_data)
sum((new_case_pred - test_data$all_new_case)^2)
MAE(new_case_pred,test_data$all_new_case)
modelNewcase2 <- lm(formula = all_new_case ~ NumDays + new_tests + new_vaccinations + people_fully_vaccinated + total_boosters, data = train_data)
summary(modelNewcase2)
new_case_pred2 = predict(modelNewcase2,test_data)
sum((new_case_pred2 - test_data$all_new_case)^2)
MAE(new_case_pred2,test_data$all_new_case)
modelNewcase3 <- lm(formula = all_new_case ~ NumDays * new_tests * new_vaccinations * people_fully_vaccinated * total_boosters, data = train_data)
summary(modelNewcase3)
new_case_pred3 = predict(modelNewcase3,test_data)
sum((new_case_pred3 - test_data$all_new_case)^2)
mean(modelNewcase3$residuals^2)
modelNewcase4 <- lm(formula = all_new_case ~ NumDays + new_tests * new_vaccinations * people_fully_vaccinated * total_boosters
+ stringency_index + reproduction_rate, data = train_data)
summary(modelNewcase4)
new_case_pred4 = predict(modelNewcase4,test_data)
sum((new_case_pred4 - test_data$all_new_case)^2)
modelNewcase5 <- lm(formula = all_new_case ~ NumDays+new_tests, data = train_data)
summary(modelNewcase5)
new_case_pred5 = predict(modelNewcase5,test_data)
sum((new_case_pred5 - test_data$all_new_case)^2)
mean(modelNewcase5$residuals^2)
# ------------------------------------------------------------------------------ #
# Part2: Predict new death
modelNewdeath1 <- lm(formula = new_death ~ NumDays + new_recovered * stringency_index * reproduction_rate, data = train_data)
summary(modelNewdeath1)
new_death_pred = predict(modelNewdeath1,test_data)
sum((new_death_pred - test_data$new_death)^2)
mean(modelNewdeath1$residuals^2)
modelNewdeath2 <- lm(formula = new_death ~ ., data = train_data)
summary(modelNewdeath2)
new_death_pred2 = predict(modelNewdeath2,test_data)
sum((new_death_pred2 - test_data$new_death)^2)
mean(modelNewdeath2$residuals^2)
modelNewdeath3 <- lm(formula = new_death ~ NumDays * new_recovered * stringency_index, data = train_data)
summary(modelNewdeath3)
new_death_pred3 = predict(modelNewdeath3,test_data)
sum((new_death_pred3 - test_data$new_death)^2)
mean(modelNewdeath3$residuals^2) # choose this for new death
RMSE(new_death_pred3, test_data$new_death)
library(tidyverse)
library(ggplot2)
library(corrplot)
library(dplyr)
library(lubridate)
library(forecast)
library(imputeTS)
library(reshape2)
library(rpart)
library(rpart.plot)
library(caret)
library(xts)
library(lattice)
# ------------------------------------------------------------------------------ #
df <- read.csv("dataset/dataCovidPredict.csv")
## Preporcessing data
# Check dataset type
str(df)
# Consider txn_date is type factor. We have to change it to date type.
df$txn_date <- as.Date(df$txn_date, format="%m/%d/%Y")
tail(df)
str(df)
# ------------------------------------------------------------------------------ #
# Check outlier
#Overall
overallBeforeNA <- ggplot(stack(df), aes(x = ind, y = values, color=ind)) +
geom_boxplot(outlier.color="black")
#1 txn_date: NO
ggplot(df, aes('',txn_date)) +
geom_boxplot()
#2 new_case: YES
ggplot(df, aes('',new_case)) +
geom_boxplot()
#3 total_case: YES
ggplot(df, aes('',total_case)) +
geom_boxplot()
#4 new_case_excludeabroad: YES
ggplot(df, aes('',new_case_excludeabroad)) +
geom_boxplot()
#5 total_case_excludeabroad: YES
ggplot(df, aes('',total_case_excludeabroad)) +
geom_boxplot()
#6 new_death: YES
ggplot(df, aes('',new_death)) +
geom_boxplot()
#7 total_death: NO
ggplot(df, aes('',total_death)) +
geom_boxplot()
#8 new_recovered: YES
ggplot(df, aes('',new_recovered)) +
geom_boxplot()
#9 total_recovered: YES
ggplot(df, aes('',total_recovered)) +
geom_boxplot()
#10 total_vaccinations: NO
ggplot(df, aes('',total_vaccinations)) +
geom_boxplot()
#11 people_vaccinated: NO
ggplot(df, aes('',people_vaccinated)) +
geom_boxplot()
#12 people_fully_vaccinated: NO
ggplot(df, aes('',people_fully_vaccinated)) +
geom_boxplot()
#13 total_boosters: YES
ggplot(df, aes('',total_boosters)) +
geom_boxplot()
#14 new_vaccinations: YES
ggplot(df, aes('',new_vaccinations)) +
geom_boxplot()
#15 stringency_index: YES
ggplot(df, aes('',stringency_index)) +
geom_boxplot()
#16 excess_mortality_cumulative_absolute: YES
ggplot(df, aes('',excess_mortality_cumulative_absolute)) +
geom_boxplot()
#17 excess_mortality_cumulative: YES
ggplot(df, aes('',excess_mortality_cumulative)) +
geom_boxplot()
#18 excess_mortality: YES
ggplot(df, aes('',excess_mortality)) +
geom_boxplot()
# ------------------------------------------------------------------------------ #
# Check NA and replacement
sum(is.na(df))
df %>% select(everything()) %>%
summarise_all(list(~sum(is.na(.))))
# Replace NA with 0
dfClean <- df %>% select(-total_tests,
-new_tests,
-reproduction_rate)
dfClean[is.na(dfClean)] <- 0
sum(is.na(dfClean))
dfTemp <- df %>% select(total_tests,
new_tests,
reproduction_rate)
dfTemp$total_tests[is.na(dfTemp$total_tests)] <- na.ma(dfTemp$total_tests, weighting = "linear", k=21)[834:854]
dfTemp$new_tests[is.na(dfTemp$new_tests)] <- round(na.ma(dfTemp$new_tests, weighting = "linear", k=21)[834:854],0)
dfTemp$reproduction_rate[is.na(dfTemp$reproduction_rate)] <- round(na.ma(dfTemp$reproduction_rate, weighting = "linear", k=64)[1:64],2)
overallAfterNA <- ggplot(stack(df), aes(x = ind, y = values, color=ind)) +
geom_boxplot(outlier.color="black")
dfClean$total_tests <- dfTemp$total_tests
dfClean$new_tests <- dfTemp$new_tests
dfClean$reproduction_rate <- dfTemp$reproduction_rate
overallAfterNA <- ggplot(stack(dfClean), aes(x = ind, y = values, color=ind)) +
geom_boxplot(outlier.color="black")
# ------------------------------------------------------------------------------ #
## Build model with Linear regression
# Convert Date to NumDays
startdate <- as.Date("01/11/2020","%m/%d/%Y")
dfClean$txn_dat2 <-  as.Date(dfClean$txn_date,"%m/%d/%Y")
dfClean$NumDays  <- difftime(dfClean$txn_dat2,startdate ,units="days")
dfClean$NumDays <- as.numeric(dfClean$NumDays)
# Remove txn_dat2 column
dfClean <- dfClean %>% select(-txn_dat2)
# Select column
dfClean$all_new_case <- dfClean$new_case + df$new_case_excludeabroad
dfCor <- as.data.frame(cor(dfClean %>% select(-txn_date)))
corrplot(cor(dfClean %>% select(-txn_date)))
# Plot line smooth regression
ggplot(dfClean, aes(txn_date, new_case),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="#228B22",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_case),options(scipen = 100, digits = 4)) + geom_line(colour ="#006400",size=2) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, new_case_excludeabroad),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="#32CD32",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_case_excludeabroad),options(scipen = 100, digits = 4)) + geom_line(colour ="#32CD32",size=2) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, new_death),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="red",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_death),options(scipen = 100, digits = 4)) + geom_line(colour ="red",size=2) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, new_recovered),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="#0096FF",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_recovered),options(scipen = 100, digits = 4)) + geom_line(colour ="#0096FF",size=2) + scale_x_date(date_labels = "%Y %b %d")
tempData <- dfClean %>% select(txn_date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
total_boosters,
new_vaccinations)
data_long <- melt(tempData, id = "txn_date")
ggplot(data_long,aes(x = txn_date, y = value, color = variable),options(scipen = 100, digits = 4)) +  geom_line(size=2)
tempData <- dfClean %>% select(txn_date,
total_case,
total_case_excludeabroad,
total_death,
total_recovered)
data_long <- melt(tempData, id = "txn_date")
ggplot(data_long,aes(x = txn_date, y = value, color = variable),options(scipen = 100, digits = 4)) +  geom_line(size=2)
ggplot(dfClean, aes(txn_date, stringency_index),options(scipen = 100, digits = 4)) + geom_line(colour ="purple",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, new_tests),options(scipen = 100, digits = 4)) + geom_point() + geom_line(colour ="#99a9ff",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, total_tests),options(scipen = 100, digits = 4)) + geom_line(colour ="#00ddde",size=2) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, reproduction_rate),options(scipen = 100, digits = 4)) + geom_line(colour ="orange",size=1) + scale_x_date(date_labels = "%Y %b %d")
ggplot(dfClean, aes(txn_date, all_new_case),options(scipen = 100, digits = 4)) + geom_line(colour ="#006400",size=2) + scale_x_date(date_labels = "%Y %b %d")
# ------------------------------------------------------------------------------ #
# Build model with linear regression
# Part1: Predict new case
dfPredict <- dfClean %>% select(-txn_date)
cor_mat <- cor(dfPredict)
temp_df <- data.frame(cor_mat[2,])
colnames(temp_df) = c('all_new_case')
temp_df %>%
filter(all_new_case > abs(0.5))
cor_mat <- cor(dfPredict)
temp_df2 <- data.frame(cor_mat[5,])
colnames(temp_df2) = c('new_death')
temp_df2
# train/test
set.seed(42)
n <- nrow(dfPredict)
train_id <- sample(1:n, size = 0.8*n)
train_data <- dfPredict[train_id, ]
test_data <- dfPredict[-train_id, ]
modelNewcase1 <- lm(formula = all_new_case ~ ., data = train_data)
summary(modelNewcase1, na.rm=TRUE)
new_case_pred = predict(modelNewcase1,test_data)
sum((new_case_pred - test_data$all_new_case)^2)
MAE(new_case_pred,test_data$all_new_case)
modelNewcase2 <- lm(formula = all_new_case ~ NumDays + new_tests + new_vaccinations + people_fully_vaccinated + total_boosters, data = train_data)
summary(modelNewcase2)
new_case_pred2 = predict(modelNewcase2,test_data)
sum((new_case_pred2 - test_data$all_new_case)^2)
MAE(new_case_pred2,test_data$all_new_case)
modelNewcase3 <- lm(formula = all_new_case ~ NumDays * new_tests * new_vaccinations * people_fully_vaccinated * total_boosters, data = train_data)
summary(modelNewcase3)
new_case_pred3 = predict(modelNewcase3,test_data)
sum((new_case_pred3 - test_data$all_new_case)^2)
mean(modelNewcase3$residuals^2)
modelNewcase4 <- lm(formula = all_new_case ~ NumDays + new_tests * new_vaccinations * people_fully_vaccinated * total_boosters
+ stringency_index + reproduction_rate, data = train_data)
summary(modelNewcase4)
new_case_pred4 = predict(modelNewcase4,test_data)
sum((new_case_pred4 - test_data$all_new_case)^2)
modelNewcase5 <- lm(formula = all_new_case ~ NumDays+new_tests, data = train_data)
summary(modelNewcase5)
new_case_pred5 = predict(modelNewcase5,test_data)
sum((new_case_pred5 - test_data$all_new_case)^2)
mean(modelNewcase5$residuals^2)
# ------------------------------------------------------------------------------ #
# Part2: Predict new death
modelNewdeath1 <- lm(formula = new_death ~ NumDays + new_recovered * stringency_index * reproduction_rate, data = train_data)
summary(modelNewdeath1)
new_death_pred = predict(modelNewdeath1,test_data)
sum((new_death_pred - test_data$new_death)^2)
mean(modelNewdeath1$residuals^2)
modelNewdeath2 <- lm(formula = new_death ~ ., data = train_data)
summary(modelNewdeath2)
new_death_pred2 = predict(modelNewdeath2,test_data)
sum((new_death_pred2 - test_data$new_death)^2)
mean(modelNewdeath2$residuals^2)
modelNewdeath3 <- lm(formula = new_death ~ NumDays * new_recovered * stringency_index, data = train_data)
summary(modelNewdeath3)
new_death_pred3 = predict(modelNewdeath3,test_data)
sum((new_death_pred3 - test_data$new_death)^2)
mean(modelNewdeath3$residuals^2) # choose this for new death
RMSE(new_death_pred3, test_data$new_death)
confusion_matrix(test_data$new_death,new_death_pred3)
confusionMatrix(test_data$new_death,new_death_pred3)
length(new_death_pred3)
length(test_data$new_death)
confusionMatrix(factor(test_data$new_death),factor(new_death_pred3))
factor(test_data$new_death)
factor(new_death_pred3)
